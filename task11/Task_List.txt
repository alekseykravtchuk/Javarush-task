1. Лошадь и Пегас
В мифах крылатый конь Пегас родился из попавшей на землю крови горгоны Медузы. А по другой версии его отцом был Посейдон. Давайте на секундочку представим, что родителями крылатого коня были не греческие боги или медузы, а все-таки лошади. В задачке нужно отредактировать классы Конь и Пегас, сделав Пегаса наследником Коня.
2. Домашние животные
Среди заводчиков и любителей домашних животных порой встречаются любители игуан, шиншилл и прочей экзотики. Но на межзвёздном корабле GalaxyRush этой самой экзотики и без того хватает. Так что здесь предпочитают традиционных кошечек и собачек. В этой задаче создаем класс Pet, записываем ему в наследники Cat и Dog.
3. Межпланетная ферма
Межзвёздный корабль GalaxyRush встретил на своем пути биолайнер Му-У. Местные фермеры — ребята неплохие, только в программировании ничего не смыслят. Ученики JavaRush решили им помочь и начали писать программу для учёта животных. Ваша часть работы — создать класс «Животное» и его наследников — «Корову», «Овцу», «Быка», «Козла» и «Свинью».
4. Хороши работнички
Даже самый главный босс когда-то был зелёным новичком. Давайте представим, что вы попали на работу в должности секретаря, но мечтаете со временем быть управляющим. Что общего между вами, управляющим и директором? Все они — сотрудники. В этой задачке нужно создать класс «Сотрудник», и унаследовать от него всех остальных.
5. ИТ-компания
Выпускники JavaRush задумали создать стартап, связанный с написанием программ для одного важного космопорта. Но вот беда: им совершенно некогда писать софт для внутренних нужд. Поэтому наставник подключил к делу учеников второго квеста. Вам нужно создать несколько классов сотрудников и их наследников.
6. Скрытный инкапсулированный кот
В лекции по инкапсуляции Риша рассказал, что порой несколько классов взаимодействуют с одним и тем же объектом, в результате — нарушается целостность данных внутри этого объекта. У нас есть кот. Нужно, чтобы все экземпляры кота остались целостными, ибо никто не любит нецелостных котов! Знаете, что делать?
7. Наш кот слишком публичен!
Враги (с кривыми верхними конечностями) не дремлют и норовят проверить на прочность написанный вами код, в том числе и код класса «Кот». Защитим кота, сокрыв его внутренние переменные. Но только те, к которым остается доступ с помощью методов. Нужно же коту как-то взаимодействовать с внешним миром.
8. Неприступный кот
Наш бортовой кот — чувствительная натура. Он не желает, чтобы к нему лезли в душу, предпочитая темную депрессию компании веселых программистов. Поможем такому коту, скроем все внутренние переменные класса Cat, а также методы, позволяющие менять внутреннее состояние объектов класса Cat.
9. Как кошка с собакой
Кошки и собаки — не лучшие друзья, но друг без друга им бывает скучно. Давайте не будем мешать их буйному взаимодействию друг с другом, оставим публичными соответствующие методы классов Cat и Dog. Все остальные методы, а также внутренние переменные — скроем от глаз и шаловливых ручек.
10. Не забываем инкапсулировать
«Инкапсулировать» — это вроде как помещать в капсулы, чтобы сберечь целостность объекта. При написании этой задачи мы сначала создали капсулы, то есть, специальные методы, а вот поля, которые нужно инкапсулировать — позабыли. Изучите код и исправьте эту оплошность, наполните капсулы смыслом.
11. «Из ребра его»
Давайте создадим виртуального человека и назовём его, по традиции, Адамом. И чтобы ему не было одиноко, напишем ему класс-наследник по имени Ева. Может, у нас всё получается вовсе не так, как в библейской истории, но мы к этому и не стремимся. Мы просто начинаем постигать такую важную часть ООП, как наследование.
12. Заклятые друзья
В 2007 году Apple представила самый первый iPhone. Как и обещал Стив Джобс, это событие действительно изменило мир. Смартфоны стали такими, как они стали. И у iPhone появилось множество вынужденных подражателей. Или наследников. Унаследуем класс SamsungGalaxyS2 от AppleIPhone и да простит нас Google.
13. Играем в Дарвина
Скорее всего, во всех школах Вселенной проходили знаменитую дарвиновскую эволюционную цепочку. Ну там рыбка, птичка, земноводное, млекопитающее… Или всё было немного не так?.. Не важно. В программе создадим рыб, общий класс животных, обезьяну и человека. И унаследуем четвертых от третьих, третьих от вторых, вторых — от первых.
14. Все мировые религии
Еще немного земной истории на страницах JavaRush! Вы, вероятно, слышали о том, что Ислам произошёл от Христианства, а то, в свою очередь исходит из Иудаизма. Продолжаем изучать ООП и наследование. Создаем три «религиозных» класса, родительский, дочерний и дочерний для дочернего.
15. От школьника до квалифицированного раба
Увы, порой жизнь напоминает постепенный переход от одной стадии рабства в другую. Сначала мы обязаны ходить в школу, потом — в университет, затем работать, работать, работать… пока из работника не превратимся в раба! Разумеется, это не наш путь, поэтому мы и учимся программировать. Пишем четыре класса и наследуем их друг от друга.
16. Цепочка наследования
Корабль Galaxy Rush доставил провизию на планету Канин в галактике Гончих Псов. За хорошую работу экипаж пригласили на лекцию по эволюции Канина. Скажете, скучно? Куда там! На этой славной планете собаки — венец эволюции — произошли от кошек. Но у нас-то всё было не так! В этой задачке мы составим обычную земную цепь эволюции.
17. Альтернативная цепочка наследования
У нас есть класс плотоядных животных, просто животных и их наследники — корова, собака и свинья. Представляете, какого шороху могла бы наделать плотоядная корова, существуй она в природе! Не допустим этого. Распишем цепочку наследования правильно!
18. Городское хозяйство
ООП позволяет фантазировать, но порой полезно оставаться в рамках здравого смысла. Скажем, вы очень любите свою машину, но стоит ли считать её своим домашним питомцем или, того хуже, — возлюбленной? Давайте в программе составим наследование исходя из здравого смысла.
19. Четвертая правильная «цепочка наследования»
«Я думал об объектах как о живых клетках или как об отдельных компьютерах в сети, которые обмениваются сообщениями», — сказал тот, кто ввёл термин ООП (гуглите, если нужно!). Предлагаем и вам так делать. Расставьте правильно «цепочку наследования» в классах House (дом), Cat (кот), Dog (собака) и Car (машина).
20. Пятая правильная «цепочка наследования»
Собаковод и кошковод Андре не умеет программировать. Он слёзно попросил вас написать программу, которая помогла бы ему разобраться с его подопечными и нажитым непосильным трудом имуществом. А вам то что, вам это легко. Вы как раз изучаете ООП и наследование.
21. Чужой код, незнакомый
Вы уже в курсе, что вам придется разбираться с чужим кодом довольно часто. И не только будучи «джуниором». К этой непростой задачке лучше привыкать смолоду, и в секретном центре JavaRush это прекрасно понимают. В задаче переставляем наследование в классах так, чтобы она компилировалась и работала.
22. Помощь шахматной школе
Мы на JavaRush любим интеллектуальные развлечения. В том числе и шахматы. Король и ферзь, слон, ладья и пешка — все они фигуры на доске. В этой задаче вам предстоит исправить дополнить чужой код, а именно — создать всем шахматным единицам общего родителя — фигуру.
23. Минимакс
На вступительном экзамене в ясли упорядоченному изоморфу Васеньке с планеты Линейный Хаос задали задачку на нахождение максимума и минимума в массиве. Как вы помните (или нет), на этой планете все только и заняты упорядочиванием и сравнением. Васенька справился. А вы?
